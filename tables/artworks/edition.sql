-- *  The 'edition_type' ENUM defines various types of editions or proofs for an artwork.
CREATE TYPE edition_type AS ENUM (
  'ed', -- edition
  'pp', -- printer's proof
  'hc', -- hors de commerce
  'ap', -- artist's proof
  'tp', -- trial proof
  'bat', -- bon Ã  tirer
  'st' -- state
);

-- * The 'edition' table stores details about individual pieces within an edition, including type, number, and condition, along with availability and framing status.
CREATE TABLE edition (
  -- * METADATA
  id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  edition_meta_id INT REFERENCES edition_meta (id) NOT NULL,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,

  -- * PIECE INFO
  type edition_type NOT NULL,
  number INT CHECK (number >= 0) NOT NULL,
  signature signature_status DEFAULT 'unknown' NOT NULL, -- signature_status is in enums.sql
  available_purchase BOOLEAN DEFAULT TRUE NOT NULL,
  available_exhibition BOOLEAN DEFAULT TRUE NOT NULL,
  is_framed BOOLEAN DEFAULT FALSE NOT NULL,
  condition artwork_condition DEFAULT 'unknown' NOT NULL
);


-- *  The function 'check_edition_totals' and its trigger enforce the consistency of edition numbers with the totals defined in the 'edition_meta' table.
CREATE OR REPLACE FUNCTION check_edition_totals()
RETURNS TRIGGER AS $$
DECLARE
  edition_meta_totals edition_meta%ROWTYPE;
BEGIN
  SELECT * INTO edition_meta_totals FROM edition_meta WHERE id = NEW.edition_meta_id;
  
  IF NEW.type = 'ed' AND NEW.number > edition_meta_totals.total_ed THEN
    RAISE EXCEPTION 'Number exceeds total_ed in edition_meta';
  ELSIF NEW.type = 'pp' AND NEW.number > edition_meta_totals.total_pp THEN
    RAISE EXCEPTION 'Number exceeds total_pp in edition_meta';
  ELSIF NEW.type = 'hc' AND NEW.number > edition_meta_totals.total_hc THEN
    RAISE EXCEPTION 'Number exceeds total_hc in edition_meta';
  ELSIF NEW.type = 'ap' AND NEW.number > edition_meta_totals.total_ap THEN
    RAISE EXCEPTION 'Number exceeds total_ap in edition_meta';
  ELSIF NEW.type = 'tp' AND NEW.number > edition_meta_totals.total_tp THEN
    RAISE EXCEPTION 'Number exceeds total_tp in edition_meta';
  ELSIF NEW.type = 'bat' AND NEW.number > edition_meta_totals.total_bat THEN
    RAISE EXCEPTION 'Number exceeds total_bat in edition_meta';
  ELSIF NEW.type = 'st' AND NEW.number > edition_meta_totals.total_st THEN
    RAISE EXCEPTION 'Number exceeds total_st in edition_meta';
  END IF;
  
  RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- * Trigger to execute the function before INSERT or UPDATE
CREATE TRIGGER trigger_check_edition_totals
BEFORE INSERT OR UPDATE ON edition
FOR EACH ROW EXECUTE FUNCTION check_edition_totals();

-- Path: tables/artworks/edition.sql

